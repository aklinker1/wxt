import { describe, it, expect } from 'vitest';
import { TestProject } from '../utils';

describe('TypeScript Project', () => {
  it('should generate defined constants correctly', async () => {
    const project = new TestProject();

    await project.build();

    const output = await project.serializeFile('.wxt/types/globals.d.ts');
    expect(output).toMatchInlineSnapshot(`
      ".wxt/types/globals.d.ts
      ----------------------------------------
      // Generated by wxt
      export {}
      declare global {
        const __MANIFEST_VERSION__: 2 | 3;
        const __BROWSER__: string;
        const __IS_CHROME__: boolean;
        const __IS_FIREFOX__: boolean;
        const __IS_SAFARI__: boolean;
        const __IS_EDGE__: boolean;
        const __IS_OPERA__: boolean;
        const __COMMAND__: \\"build\\" | \\"serve\\";
      }
      "
    `);
  });

  it('should define auto-import globals', async () => {
    const project = new TestProject();

    await project.build();

    const output = await project.serializeFile('.wxt/types/imports.d.ts');
    expect(output).toMatchInlineSnapshot(`
      ".wxt/types/imports.d.ts
      ----------------------------------------
      // Generated by wxt
      export {}
      declare global {
        const browser: typeof import('wxt/browser')['browser']
        const defineBackground: typeof import('wxt/client')['defineBackground']
        const defineConfig: typeof import('wxt')['defineConfig']
        const defineContentScript: typeof import('wxt/client')['defineContentScript']
        const mountContentScriptUi: typeof import('wxt/client')['mountContentScriptUi']
      }
      "
    `);
  });

  it('should augment the types for browser.runtime.getURL', async () => {
    const project = new TestProject();
    project.addFile('entrypoints/popup.html');
    project.addFile('entrypoints/options.html');
    project.addFile('entrypoints/sandbox.html');

    await project.build();

    const output = await project.serializeFile('.wxt/types/paths.d.ts');
    expect(output).toMatchInlineSnapshot(`
      ".wxt/types/paths.d.ts
      ----------------------------------------
      // Generated by wxt
      import \\"wxt/browser\\";

      declare module \\"wxt/browser\\" {
        type PublicPath =
          | \\"/options.html\\"
          | \\"/popup.html\\"
          | \\"/sandbox.html\\"
        export interface ProjectRuntime extends Runtime.Static {
          getURL(path: PublicPath): string;
        }
      }
      "
    `);
  });
});
